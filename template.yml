AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AnswerKing API Gateway SAM template for Lambda and API Gateway resource creation.

Parameters:
  DBUser:
    Type: String
    NoEcho: true
  
  DBPass:
    Type: String
    NoEcho: true
  
Resources:
  AnswerKingApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: Answer King API
      StageName: Development
  DBConnectionLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: db-connection-layer
      Description: Shared DB connection code
      ContentUri: api/lambda_layers/db_connection
      CompatibleRuntimes:
        - python3.13
  JsonDefaultLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: json-default-layer
      Description: Shared Json parsing code to handle datetime parsing
      ContentUri: api/lambda_layers/json_default_parser
      CompatibleRuntimes:
        - python3.13
  ValidateItemsRequestBodyLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: validate-items-request-body-layer
      Description: Validates items request body is accepted
      ContentUri: api/lambda_layers/validate_items_request_body
      CompatibleRuntimes:
        - python3.13
  ValidateIdPathParamLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: validate-id-path-param-layer
      Description: Validates id path parameter
      ContentUri: api/lambda_layers/validate_id_path_param
      CompatibleRuntimes:
        - python3.13
  ValidateCategoriesRequestBodyLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: validate-categories-request-body-layer
      Description: Validates categories request body is accepted
      ContentUri: api/lambda_layers/validate_categories_request_body
      CompatibleRuntimes:
        - python3.13
  ValidateItemIdQueryStringParamLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: validate-item-id-query-param-layer
      Description: Validates item id query string parameter
      ContentUri: api/lambda_layers/validate_item_id_query_param
      CompatibleRuntimes:
        - python3.13
  GetActiveRowFromTableLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: get-active-row-from-table-layer
      Description: Gets active row from table by id
      ContentUri: api/lambda_layers/get_active_row_from_table
      CompatibleRuntimes:
        - python3.13

  CreateItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/items/create_item/
      Handler: create_item.lambda_handler
      Layers:
        - !Ref DBConnectionLayer
        - !Ref ValidateItemsRequestBodyLayer
        - !Ref JsonDefaultLayer
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /item
            Method: POST
  DeleteItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/items/remove_item/
      Handler: remove_item.lambda_handler
      Layers:
        - !Ref DBConnectionLayer
        - !Ref ValidateIdPathParamLayer
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /item/{id}
            Method: DELETE
  GetAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/items/get_all_items/
      Handler: get_all_items.lambda_handler
      Layers:
        - !Ref DBConnectionLayer
        - !Ref JsonDefaultLayer
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /item
            Method: GET
  GetItemByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/items/get_item_by_id/
      Handler: get_item_by_id.lambda_handler
      Layers:
        - !Ref DBConnectionLayer
        - !Ref JsonDefaultLayer
        - !Ref ValidateIdPathParamLayer
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /item/{id}
            Method: GET
  UpdateItemByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/items/update_item/
      Handler: update_item.lambda_handler
      Layers:
        - !Ref DBConnectionLayer
        - !Ref ValidateItemsRequestBodyLayer
        - !Ref JsonDefaultLayer
        - !Ref ValidateIdPathParamLayer
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /item/{id}
            Method: PUT
  CreateCategoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/categories/create_category/
      Handler: create_category.lambda_handler
      Layers:
        - !Ref DBConnectionLayer
        - !Ref ValidateCategoriesRequestBodyLayer
        - !Ref JsonDefaultLayer
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /category
            Method: POST
  GetAllCategoriesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/categories/get_all_categories/
      Handler: get_all_categories.lambda_handler
      Layers:
        - !Ref DBConnectionLayer
        - !Ref JsonDefaultLayer
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /category
            Method: GET
  DeleteCategoryByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/categories/remove_category/
      Handler: remove_category.lambda_handler
      Layers:
        - !Ref DBConnectionLayer
        - !Ref ValidateIdPathParamLayer
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /category/{id}
            Method: DELETE
  UpdateCategoryByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/categories/update_category/
      Handler: update_category.lambda_handler
      Layers:
        - !Ref DBConnectionLayer
        - !Ref ValidateIdPathParamLayer
        - !Ref ValidateCategoriesRequestBodyLayer
        - !Ref JsonDefaultLayer
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /category/{id}
            Method: PUT
  AddItemToCategoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/item_categories/add_item_to_category/
      Handler: add_item_to_category.lambda_handler
      Layers:
        - !Ref DBConnectionLayer
        - !Ref ValidateIdPathParamLayer
        - !Ref ValidateItemIdQueryStringParamLayer
        - !Ref GetActiveRowFromTableLayer
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /category/{id}/items
            Method: POST
            RequestParameters:
              - method.request.querystring.itemID:
                  Required: true
  GetAllItemsByCategoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/item_categories/get_items_by_category/
      Handler: get_items_by_category.lambda_handler
      Layers:
        - !Ref DBConnectionLayer
        - !Ref ValidateIdPathParamLayer
        - !Ref ValidateItemIdQueryStringParamLayer
        - !Ref GetActiveRowFromTableLayer
        - !Ref JsonDefaultLayer
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /category/{id}/items
            Method: GET
  CreateOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/orders/create_order/
      Handler: create_order.lambda_handler
      Layers:
        - !Ref DBConnectionLayer
        - !Ref JsonDefaultLayer
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /orders
            Method: POST

Outputs:
  AnswerKingApiGateway:
    Description: 'API Gateway endpoint URL for Development stage for create item'
    Value: !Sub 'https://${AnswerKingApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Development'
  AnswerKingAWSApiGatewayRestApiId:
    Description: 'API Gateway ARN for Answer King API'
    Value: !Ref AnswerKingApiGateway
    Export:
      Name: AnswerKingApiGateway-RestApiId
  AnswerKingApiGatewayRootResourceId:
    Value: !GetAtt AnswerKingApiGateway.RootResourceId
    Export:
      Name: AnswerKingApiGateway-RootResourceId