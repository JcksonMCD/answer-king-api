AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AnswerKing API Gateway SAM template for Lambda and API Gateway resource creation.

Parameters:
  DBUser:
    Type: String
    NoEcho: true
  
  DBPass:
    Type: String
    NoEcho: true
  
Resources:
  AnswerKingApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: Answer King API
      StageName: Development
  CreateItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/items/create-item/
      Handler: create_item.lambda_handler
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /item
            Method: POST
  DeleteItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/items/remove-item/
      Handler: remove_item.lambda_handler
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /item/{id}
            Method: DELETE
  GetAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/items/get-all-items/
      Handler: get_all_items.lambda_handler
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /item
            Method: GET
  GetItemByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/items/get-item-by-id/
      Handler: get_item_by_id.lambda_handler
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /item/{id}
            Method: GET
  UpdateItemByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/items/update-item/
      Handler: update_item.lambda_handler
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /item/{id}
            Method: PUT
  CreateCategoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/categories/create-category/
      Handler: create_category.lambda_handler
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /category
            Method: POST
  GetAllCategoriesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/categories/get-all-categories/
      Handler: get_all_categories.lambda_handler
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /category
            Method: GET
  DeleteCategoryByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/categories/remove-category/
      Handler: remove_category.lambda_handler
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /category/{id}
            Method: DELETE
  UpdateCategoryByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/categories/update-category/
      Handler: update_category.lambda_handler
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /category/{id}
            Method: PUT
  AddItemToCategoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/item-categories/add-item-to-category/
      Handler: add_item_to_category.lambda_handler
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /category/{id}
            Method: POST
            RequestParameters:
              - method.request.querystring.itemID:
                  Required: true
  GetAllItemsByCategoryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api/item-categories/get-items-by-category/
      Handler: get_items_by_category.lambda_handler
      Runtime: python3.13
      Timeout: 10
      VpcConfig:
        SecurityGroupIds:
          - !ImportValue LambdaSecurityGroupID
        SubnetIds:
          - !ImportValue Subnet1ID
          - !ImportValue Subnet2ID
      Environment:
        Variables:
          DB_NAME: AnswerKingAPI
          DB_USER: !Ref DBUser
          DB_PASS: !Ref DBPass
          DB_HOST: !ImportValue AnswerKingDBHost
          DB_PORT: "5432"
      Events:
        AnswerKingApi:
          Type: Api
          Properties:
            RestApiId: !Ref AnswerKingApiGateway
            Path: /category/{id}/items
            Method: GET

Outputs:
  AnswerKingApiGateway:
    Description: 'API Gateway endpoint URL for Development stage for create item'
    Value: !Sub 'https://${AnswerKingApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Development'
  AnswerKingAWSApiGatewayRestApiId:
    Description: 'API Gateway ARN for Answer King API'
    Value: !Ref AnswerKingApiGateway
    Export:
      Name: AnswerKingApiGateway-RestApiId
  AnswerKingApiGatewayRootResourceId:
    Value: !GetAtt AnswerKingApiGateway.RootResourceId
    Export:
      Name: AnswerKingApiGateway-RootResourceId